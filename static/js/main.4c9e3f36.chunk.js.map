{"version":3,"sources":["components/Timer/Timer.jsx","components/ModeButton/ModeButton.jsx","components/ModeContainer/ModeContainer.jsx","App.js","state/redux-store.js","index.js"],"names":["renderTime","remainingTime","className","Math","ceil","UrgeWithPleasureComponent","props","isPlaying","duration","timerDuration","colors","ModeButton","onClick","mode","name","ModeContainer","dispatch","useDispatch","currentMode","useSelector","state","isActive","onModeClickHandler","type","value","newMode","possibleModes","map","App","timerMinutesDuration","find","time","createStore","action","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","store","reduxStore","document","getElementById"],"mappings":"2RAGMA,EAAa,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAElB,OACE,sBAAKC,UAAU,oBAAf,UACE,qBAAKA,UAAU,QAAf,SAAwBC,KAAKC,KAAKH,EAAgB,MAClD,qBAAKC,UAAU,OAAf,qBACA,qBAAKA,UAAU,QAAf,SAAwBD,EAAgB,KACxC,qBAAKC,UAAU,OAAf,yBAqBOG,EAfmB,SAACC,GAAD,OAC9B,8BACI,cAAC,uBAAD,CACIC,WAAW,EACXC,SAAgC,GAAtBF,EAAMG,cAChBC,OAAQ,CACJ,CAAC,UAAW,IAJpB,SAOKV,O,YCbEW,MATf,SAAoBL,GAChB,OACI,wBAAQJ,UAAU,cAClBU,QAAS,WAAON,EAAMM,QAAQN,EAAMO,OADpC,SAEKP,EAAMO,KAAKC,Q,OC6BTC,MA/Bf,SAAuBT,GAEnB,IAAMU,EAAWC,cAEXC,EAAcC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,eACzCG,EAAWF,aAAY,SAAAC,GAAK,OAAIA,EAAMC,YAE5C,SAASC,EAAmBT,GAEpBK,IAAgBL,EAAKC,KACrBE,EAAS,CAACO,KAAM,kBAAmBC,OAAQH,KAE3CL,EAAS,CAACO,KAAM,gBAAiBE,QAASZ,EAAKC,OAC/CE,EAAS,CAACO,KAAM,kBAAmBC,OAAO,KAIlD,OACI,qBAAKtB,UAAU,mBAAf,SAEQI,EAAMoB,cAAcC,KAAI,SAACd,GAAD,OACpB,cAAC,EAAD,CACAD,QAASU,EAETT,KAAMA,GADDA,EAAKC,YCJfc,MAnBf,WAEE,IAAMV,EAAcC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,eACzCQ,EAAgBP,aAAY,SAAAC,GAAK,OAAIA,EAAMM,iBAE3CG,GADWV,aAAY,SAAAC,GAAK,OAAIA,EAAMC,YACfF,aAC3B,SAAAC,GAAK,OAAIA,EAAMM,cAAcI,MAAK,SAAAjB,GAAI,OAAIA,EAAKC,OAASI,KAAaa,SAGvE,OACE,sBAAK7B,UAAU,YAAf,UACE,oBAAIA,UAAU,UAAd,qBACA,mBAAGA,UAAU,UAAb,yCACA,cAAC,EAAD,CAAewB,cAAeA,IAC9B,cAAC,EAAD,CAA2BxB,UAAU,cAAcO,cAAeoB,Q,cCMzDG,mBAhBf,SAAiBZ,EAAOa,GACpB,MAAoB,oBAAhBA,EAAOV,KACA,2BAAKH,GAAZ,IAAmBC,SAAUY,EAAOT,QAGf,kBAAhBS,EAAOV,KACL,2BAAIH,GAAX,IAAkBF,YAAae,EAAOR,UAGjB,sBAAhBQ,EAAOV,KACL,2BAAIH,GAAX,IAAkBF,YAAae,EAAOzB,WAGnCY,IApBU,CACjBM,cAAe,CAAC,CAACZ,KAAM,QAASiB,KAAM,IACrB,CAACjB,KAAM,OAAQiB,KAAM,KACtCb,YAAa,QACbG,UAAU,GAqBaa,OAAOC,8BAAgCD,OAAOC,gCCpBzEC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOC,EAAjB,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.4c9e3f36.chunk.js","sourcesContent":["import './Timer.css'\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\n\nconst renderTime = ({ remainingTime }) => {\n  \n    return (\n      <div className=\"timerInnerContent\">\n        <div className=\"value\">{Math.ceil(remainingTime / 60)}</div>\n        <div className=\"text\">minutes</div>\n        <div className=\"value\">{remainingTime % 60}</div>\n        <div className=\"text\">seconds</div>\n      </div>\n    );\n  };\n  \n\nconst UrgeWithPleasureComponent = (props) => (\n    <div>\n        <CountdownCircleTimer\n            isPlaying={false}\n            duration={props.timerDuration * 60}\n            colors={[\n                ['#889773', 1]\n            ]}\n        >\n            {renderTime}\n        </CountdownCircleTimer>\n\n    </div>\n)\n\nexport default UrgeWithPleasureComponent","import './ModeButton.css'\nimport React from 'react'\n\nfunction ModeButton(props) {\n    return (\n        <button className='mode-button'\n        onClick={() => {props.onClick(props.mode)}}>\n            {props.mode.name}\n        </button>\n    )\n}\n\nexport default ModeButton","import './ModeContainer.css'\nimport ModeButton from '../ModeButton/ModeButton'\nimport { useDispatch } from 'react-redux'\nimport {useSelector} from 'react-redux'\n\nfunction ModeContainer(props) {\n    \n    const dispatch = useDispatch()\n\n    const currentMode = useSelector(state => state.currentMode)\n    const isActive = useSelector(state => state.isActive)\n\n    function onModeClickHandler(mode) {\n        \n        if (currentMode === mode.name) {\n            dispatch({type: 'SET_ACTIVE_FLAG', value: !isActive})\n        } else {\n            dispatch({type: 'SET_CURR_MODE', newMode: mode.name})\n            dispatch({type: 'SET_ACTIVE_FLAG', value: true})\n        }        \n    }\n    \n    return (\n        <div className='mode-buttons-row'>\n            {\n                props.possibleModes.map((mode) =>\n                    <ModeButton\n                    onClick={onModeClickHandler}\n                    key={mode.name}\n                    mode={mode}/>\n                )\n            }\n        </div>\n    )\n}\n\nexport default ModeContainer","import './App.css';\nimport UrgeWithPleasureComponent from './components/Timer/Timer';\nimport ModeContainer from './components/ModeContainer/ModeContainer';\nimport {useSelector} from 'react-redux'\n\nfunction App() {\n  \n  const currentMode = useSelector(state => state.currentMode)\n  const possibleModes = useSelector(state => state.possibleModes)\n  const isActive = useSelector(state => state.isActive)\n  const timerMinutesDuration = useSelector(\n    state => state.possibleModes.find(mode => mode.name === currentMode).time \n  )\n\n  return (\n    <div className=\"Container\">\n      <h1 className='zenMode'>zenMode</h1>\n      <p className='levelUp'>Level Up Your Productivity.</p>\n      <ModeContainer possibleModes={possibleModes}/>\n      <UrgeWithPleasureComponent className='timerCircle' timerDuration={timerMinutesDuration}/>\n    </div>\n  );\n}\n\nexport default App;\n","import { createStore } from \"redux\"\n\nconst initialState = {\n    possibleModes: [{name: 'Focus', time: 45},\n                     {name: 'Rest', time: 15}],\n    currentMode: 'Focus',\n    isActive: false\n}\n\nfunction reducer(state, action) {\n    if (action.type === 'SET_ACTIVE_FLAG') {\n        return {... state, isActive: action.value}\n    }\n\n    else if (action.type === 'SET_CURR_MODE') {\n        return {...state, currentMode: action.newMode}\n    }\n\n    else if (action.type === 'SET_MODE_DURATION') {\n        return {...state, currentMode: action.duration}\n    }\n\n    return state\n}\n\nexport default createStore(reducer,\n                           initialState,\n                           window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport reduxStore from './state/redux-store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={reduxStore}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}